buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            // Add maven repo for SpecialSource
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
	classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'scala'
apply plugin: 'forge'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'

ext.buildProps = file "build.properties"
 
buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

repositories {
    maven {
	name 'Calclavia Maven'
	url 'http://calclavia.com/maven'
    }
    maven {
	name = "forge"
	url = "http://files.minecraftforge.net/maven"
    }
    maven { // the repo from which to get NEI and stuff
	name 'CB Repo'
	url "http://chickenbones.net/maven"
    }
    ivy {
	name 'FMP'
	artifactPattern "http://files.minecraftforge.net/[module]/[module]-dev-[revision].[ext]"
    }
}

dependencies {
    
    // Would really like to switch to using the new method, so I can update to gradle 2
    //compile group: 'universalelectricity', name: 'Universal-Electricity', version: "${config.version.universalelectricity}", ext: 'jar', classifier: "dev"
    compile 'dev.calclavia.universalelectricity:universal-electricity:+:dev'
    
    compile group: 'codechicken', name: 'NotEnoughItems', version: "${config.version.minecraft}-${config.version.nei}", ext: 'jar', classifier: "dev"
    compile group: 'codechicken', name: 'CodeChickenCore', version: "${config.version.minecraft}-${config.version.cccore}", ext: 'jar', classifier: "dev"
    compile group: 'codechicken', name: 'CodeChickenLib', version: "${config.version.minecraft}-${config.version.cclib}", ext: 'jar', classifier: "dev"
}
version = "MC${config.version.minecraft}-F${config.version.forge}_v${config.version.mod.major}.${config.version.mod.minor}${config.version.mod.revis}"
group = "minechem"
archivesBaseName = "MineChem"

minecraft {
    version = "${config.version.minecraft}-${config.version.forge}"
	
    replaceIn "ModMinechem.java"
    replace "@MAJOR@", config.version.mod.major
    replace "@MINOR@", config.version.mod.minor
    replace "@REVIS@", config.version.mod.revis
	
    if (System.getenv("BUILD_NUMBER") != null) {
	replace "@BUILD@", System.getenv("BUILD_NUMBER")
    }
    else
    {
	replace "@BUILD@", "[NIGHTLY]"
    }
}

if (System.getenv("BUILD_NUMBER") != null) {
    version += ".${System.getenv("BUILD_NUMBER")}";
}
else {
    version = "MC${config.version.minecraft}-F${config.version.forge}_[NIGHTLY]"
}

processResources {
    from 'build.properties'
}

allprojects {
    version = "${config.version.mod.major}.${config.version.mod.minor}.${config.version.mod.revis}"
    
    if (System.getenv("BUILD_NUMBER") != null)
    version += ".${System.getenv("BUILD_NUMBER")}"
    
    jar {
		
        dependsOn ":copyBuildXml"
        destinationDir = file (rootProject.getRootDir().getPath() + '/output')
    }
	
    publishing {
	publications {
	    mavenJava(MavenPublication) {
		artifact jar
	    }
	}
	repositories {
	    maven {
		url "file://var/www/maven"
	    }
	}
    }
}
 
task copyBuildXml(type: Copy) {
    from 'build.properties'
    into 'output'
}
 
task apiZip(type: Zip) {
    classifier = 'api'
    from sourceSets*.allSource
    include 'minechem/api/**'
    destinationDir = file 'output'
}
	
artifacts {
    archives apiZip
}

build.dependsOn "apiZip", "copyBuildXml"
